my2Matrix <- matrix(c(5,6,7,8),nrow=2,ncol=2)
debugSource('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
ks_cm <- makeCacheMatrix(myMatrix)
cacheSolve(ks_cm)
cacheSolve(ks_cm)
debugSource('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
ks_cm <- makeCacheMatrix(myMatrix)
cacheSolve(ks_cm)
ks_cm$get()
debugSource('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
ks_cm <- makeCacheMatrix(myMatrix)
ks_cm$get()
cacheSolve(ks_cm)
cacheSolve(ks_cm)
cacheSolve(ks_cm$set(my2Matrix))
ks_cm$set(my2Matrix)
cacheSolve(ks_cm)
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getinverse()
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/R_Prog/Week3/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(iris)
?iris
iris
x<-mean(iris$Sepal.Length)
x<-where (iris$species="virginica") iris$Sepal.length
iris[iris$specias="verginica",]
iris[iris$specias="verginica", iris$Sepal.length]
iris[iris$species, iris$Sepal.length]
View(iris)
df[iris$Species="verginica", iris$Sepal.Length]
df[iris$Species, iris$Sepal.Length]
iris[iris$Species]
iris[iris$Species="verginica"]
iris[iris$Species=="verginica"]
iris[iris$Species=="virginica"]
iris[iris$Species=="virginica", iris$Special.Length]
iris[iris$Species=="virginica",]
x<-iris[iris$Species=="virginica",]
View(x)
x<-iris[iris$Species=="virginica",iris$Sepal.Length]
x<-iris[iris$Species=="virginica",Sepal.Length]
x<-iris[iris$Species=="virginica",iris$Sepal.Length]
x<-iris[iris$Species=="virginica",]
mean(x$Sepal.Length)
colMeans(iris)
colMeans(iris)
library(datasets)
data(iris)
colMeans(iris)
colMeans(iris$Species=="virginica", Sepal.Length)
apply(iris[, 1:4],1,mean)
cols(iris)
View(iris)
apply(iris[1:4], 2, mean)
mean(iris$Sepal.Length)
?apply
library(datasets)
data(mtcars)
?mtcars
rm(iris)
rm(x)
mtcars
View(mtcars)
apply(mtcars,2,mean)
sapply(mtcars,cyl,mean)
mean(mtcars$mpg,mtcars$cyl)
with(mtcars,tapply(mpg,cyl,mean))
?with
tapply(mpg,cyl,mean)
mtcars$cyl==5
mtcars$cyl==4
mtcars[mtcars$cyl==4,hp]
mtcars[mtcars$cyl==4,mtcars$hp]
mtcars[mtcars$cyl==4,]
mtcars[,mtcars$cyl==4]
mtcars[mtcars$cyl==4, mtcars$hp]
mtcars[mtcars$cyl==4, ]
mean(mtcars[mtcars$cyl=4])
mean(mtcars[mtcars$cyl==4])
mean(mtcars[mtcars$cyl==4],)
mean(mtcars[mtcars$cyl==4,])
x<-mtcars[mtcars$cyl==4,])
x<-mtcars[mtcars$cyl==4,]
x
x$hp
mean(x$hp)
x<-mean(mtcars$hp[mtcars$cyl==4,])
y<-mtcars[mtcars$cyl==8,]
mean(y)
z <- mean(x$hp) - mean(y$hp)
z <- mean(x$hp) - mean(y$hp)
z
debug(l)
debug(ls)
ls
ls(iris)
q
q()
Q
Q
q()
?download.file
myData <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "mydata.csv)
""
)
""
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "mydata.csv")
?read.table
myData <- read.table("mydata.csv")
View(myData)
myData <- read.table("mydata.csv", sep=",", header=TRUE)
View(myData)
?filter
filter(myData, val>1000000)
filter(myData, VAL>1000000)
?select
library(dplplr)
rm("myData")
library(data.table)
myData <- read.table("mydata.csv", sep=",", header=TRUE)
select(myData, VAL>1000000)
?sel
myData[,VAL>1000000]
myData[,a:=VAL>1000000]
myData[,a:=!is.na(VAL)]
?:=
View(myData)
myData[,a:=!is.na(VAL)]
summary(myData)
str(myData)
myDT <- data.table(myData)
rm myData
rm(myData)
View(myDT)
myDT[, a:=VAL==24]
View(myDT)
myDT[, b:=sum(a)]
DT
myDT
myDT$b
View(myDT)
rm(myDT)
myData <- read.table("mydata.csv", sep=",", header=TRUE)
myDT <- data.table(myData)
rm(myData)
myDT[,by=VAL==24]
myDT[,.N, by=VAL==24]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "natGas.xlsx")
library(xlsx)
?package
install.packages("xlsx")
library(xlsx)
?load
load(xlsx)
install.packages("rJava")
load(xlsx)
library(rJava)
install.packages("xlsxjars")
library(xlsx)
?ver
version()
rversion()
R.Version()
library(xlsx)
library(rJava)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
library(rJava)
q()
library(xlsx)
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
print.trellis(p)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
plot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture.R')
airquality = transform(airquality, Month = factor(Month))
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture.R')
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture.R')
data(maacs)
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture00.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture00.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture00.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture.R')
source('C:/Users/kasmith1/SkyDrive/Documents/Coursera/ExploratoryDataAnalysis/Week2/week2_lecture00.R')
pwd()
install packages("markdown")
install.packages("markdown")
library(markdown)
---
setwd("C:/Users/kasmith1/SkyDrive/Documents/Coursera/ReproducibleResearch/Week2/RepData_PeerAssessment1")
pwd
setwd("C:/Users/kasmith1/SkyDrive/Documents/Coursera/ReproducibleResearch/Week2/RepData_PeerAssessment1")
unzip("activity.zip", overwrite=TRUE, exdir=".")
activityDF
activityDF <- read.csv("activity.csv", header=TRUE, sep=",")
View(activityDF)
output:
html_document:
keep_md: true
source('~/.active-rstudio-document', echo=TRUE)
View(activityDF)
setwd("C:/Users/kasmith1/SkyDrive/Documents/Coursera/ReproducibleResearch/Week2/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
View(activityDF)
activityDF <- activityDF[complete.cases(activityDF), ]
View(activityDF)
activityDF <- read.csv("activity.csv", header=TRUE, sep=",")
View(activityDF)
activityDF <- na.omit(activityDF)
View(activityDF)
activityDF <- read.csv("activity.csv", header=TRUE, sep=",")
activityDF <- activityDF[complete.cases(activityDF), ]
activityDF <- read.csv("activity.csv", header=TRUE, sep=",")
activityDF <- na.omit(activityDF)
View(activityDF)
source('~/.active-rstudio-document', echo=TRUE)
View(activityDF)
foosum <- ddply(activityDF, c("date", "steps"), summarise,
n = length(value),
mean = mean(value))
library(plyr)
library(lubridate)
foosum <- ddply(activityDF, c("date", "steps"), summarise,
n = length(value),
mean = mean(value))
foosum <- ddply(activityDF, c("date"), summarise,
n = length(steps),
mean = mean(steps))
View(foosum)
View(foosum)
ddply(activityDF, c("date"), summarise,
n = length(steps),
mean = mean(steps))
View(foosum)
View(foosum)
source('~/.active-rstudio-document', echo=TRUE)
View(stepsPerDay)
View(stepsPerDay)
View(stepsPerDay)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(stepsPerDay, aes(x=TotalSteps)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1)
library(ggplot2)
ggplot(stepsPerDay, aes(x=TotalSteps)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=total)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=total)) + geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=TotalSteps)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)), geom_vline(aex(xintercept=median(stepsPerDay$total))),
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=TotalSteps)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1) +
geom_vline(aex(xintercept=median(stepsPerDay$total)),
color="blue", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalSteps)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(stepsPerDay$total)),
color="blue", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalSteps)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$total)),
color="red", linetype="dashed", size=1)
library(plyr)
stepsPerDay <- ddply(activityDF, c("date"), summarise, TotalStepsPerDay = sum(steps))
stepsPerDayMean <- mean(stepsPerDay$TotalStepsPerDay)
stepsPerDayMedian <- median(stepsPerDay$TotalStepsPerDay)
library(ggplot2)
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$TotalStepsPerDay)),
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=TotalSteps)) + geom_histogram(binwidth=.5, colour="black", fill="white"))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$TotalStepsPerDay)),
color="red", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(stepsPerDay$TotalStepsPerDay)),
color="red", linetype="dashed", size=1)
)
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) geom_histogram(colour="black", fill="white")
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) + geom_histogram(colour="black", fill="white")
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=stepsPerDayMean,
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=stepsPerDayMedian,
color="blue", linetype="dashed", size=1))
)
ggplot(stepsPerDay, aes(x=TotalStepsPerDay))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white")
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=stepsPerDayMean,
color="red", linetype="dashed", size=1)
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=stepsPerDayMean,
color="red", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=(stepsPerDayMean),
color="red", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(colour="black", fill="white") +
geom_vline(aes(xintercept=(stepsPerDayMean),
color="red", linetype="dashed", size=1)) +
geom_vline(aes(xintercept=(stepsPerDayMedian),
color="blue", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=500, colour="black", fill="white") +
geom_vline(aes(xintercept=(stepsPerDayMean),
color="red", linetype="dashed", size=1))
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=500, colour="black", fill="white") +
geom_vline(aes(xintercept=(stepsPerDayMedian),
color="blue", linetype="dashed", size=1)) +
geom_vline(aes(xintercept=(stepsPerDayMean),
color="red", linetype="dashed", size=1))
geom_histogram(binwidth=500, colour="black", fill="white")
ggplot(stepsPerDay, aes(x=TotalStepsPerDay)) +
geom_histogram(binwidth=500, colour="black", fill="white")
source('~/.active-rstudio-document', echo=TRUE)
View(activityDF_noNA)
plot(activityDF_nonNA$)
View(stepsPerDay)
View(stepsPerDay)
stepsPerDayAvg <- ddply(activityDF_noNA, c("date"), summarise, AvgStepsPerDay = mean(steps))
View(stepsPerDayAvg)
View(stepsPerDayAvg)
plot(x <- stepsPerDayAvg, type="l", )
plot(stepsPerDayAvg, type="l", )
plot(stepsPerDayAvg$avgStepsPerDay, type="l", )
stepsPerDayAvg$avgStepsPerDay
stepsPerDayAvg[avgStepsPerDay,]
stepsPerDayAvg[1,]
stepsPerDayAvg[,1]
plot(stepsPerDayAvg[,1], type="l", )
View(stepsPerDayAvg)
plot(stepsPerDayAvg[,1], stepsPerDayAvg[,2], type="l", )
plot(stepsPerDayAvg$date, stepsPerDay$AvgStepsPerDay, type="l")
plot(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, type="l")
plot(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, type="l")
plot(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, format=%Y-%m-%d, type="l")
plot(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, format=%Y-%m, type="l")
plot(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, format="%Y-%m-%d", type="l")
plot.ts(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, format="%Y-%m-%d", type="l")
plot.ts(x=stepsPerDayAvg$date, y=stepsPerDay$AvgStepsPerDay, format="%Y-%m-%d")
plot.ts(stepsPerDayAvg, format="%Y-%m-%d")
plot.ts(stepsPerDayAvg, format="%Y-%m-%d")
plot.ts(stepsPerDayAvg$AvgStepsPerDay, format="%Y-%m-%d")
plot.ts(stepsPerDayAvg$AvgStepsPerDay, format="%Y-%m-%d")
warnings()
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + scale_x_date(format = "%b-%Y") + xlab("") + ylab("Avg Steps Per Day")
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + scale_x_date(format = "%Y-%m-%d") + xlab("") + ylab("Avg Steps Per Day")
summary(stepsPerDayAvg)
str(stepsPerDayAvg)
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + scale_x_date(format = "%Y-%m-%d") + xlab("") + ylab("Avg Steps Per Day")
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day")
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = date_breaks("5 days"), labels = date_format("%m-%d"))
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = "5 days", labels = date_format("%B"))
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = "5 days", labels = date_format("%d"))
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = "5 days", labels = date_format("%m-%d"))
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = "5 days", labels = format("%m-%d"))
ggplot(stepsPerDayAvg, aes(date, AvgStepsPerDay)) + geom_line() + xlab("") + ylab("Avg Steps Per Day") + scale_x_date(breaks = "5 days", labels = format("%m-%D"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line()
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(date_format("%W"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(format("%W"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(label=format("%W"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(label=format("%Y-%M-%d"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(label=format("%Y-%M-%d", breaks=date_break("weeks")))
str(strpsPerDayAvg)
str(stepsPerDayAvg)
temp <- stepsPerDayAvg
temp$date <- as.Date(temp$date)
str(temp)
ggplot(temp, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(label=format("%Y-%M-%d", breaks=date_break("weeks")))
ggplot(temp, aes(x=date, y=AvgStepsPerDay)) + geom_line() + scale_x_date(label=format("%Y-%M-%d")
)
ggplot(temp, aes(x=date, y=AvgStepsPerDay)) + geom_line()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(stepsPerDay, aex(x=date, y=AvgStepsPerDay)) + geom_line() +
scale_x_date(label=format("%M-%d"))
ggplot(stepsPerDayAvg, aex(x=date, y=AvgStepsPerDay)) + geom_line() +
scale_x_date(label=format("%M-%d"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() +
scale_x_date(label=format("%M-%d"))
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line()
View(activityDF)
sum(is.na(actifityDF$steps)
)
sum(is.na(activityDF$steps))
sum(is.na(activityDF$date))
sum(is.na(activityDF$interval)
)
imputeActivityDF <- activityDF
imputeActivityDF[is.na(imputeActivityDF$steps)] <- stepsPerDayMean
imputeActivityDF[is.na(imputeActivityDF$steps)]
imputeActivityDF[is.na(imputeActivityDF$steps), ] < stepsPerDayMean
imputeActivityDF[is.na(imputeActivityDF$steps), ] <- stepsPerDayMean
imputeActivityDF[is.na(, imputeActivityDF$steps) ] <- stepsPerDayMean
imputeActivityDF[, is.na(imputeActivityDF$steps) ] <- stepsPerDayMean
View(imputeActivityDF)
View(imputeActivityDF)
imputeActivityDF[is.na(imputeActivityDF$steps), ]
imputeActivityDF <- mutate(steps = ifelse(is.na(steps), stepsPerDayMean, steps))
imputeActivityDF[mutate(steps = ifelse(is.na(steps), stepsPerDayMean, steps))]
imputeActivityDF[mutate(steps = ifelse(is.na(steps), stepsPerDayMean, steps)),]
imputeActivityDF[, mutate(steps = ifelse(is.na(steps), stepsPerDayMean, steps))]
imputeActivityDF$steps[is.na(imputeActivityDF$steps)] = stepsPerDayMean
View(imputeActivityDF)
imputeActivityDF$weekDays <- weekdays(imputeActivityDF$date, abbreviate=TRUE)
View(imputeActivityDF)
View(imputeActivityDF)
View(imputeActivityDF)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(imputeStepsPerDayTotal)
source('~/.active-rstudio-document', echo=TRUE)
View(imputeStepsPerDayTotal)
which(imputeStepsPerDayTotal$weekDays==c('Sun','Sat'))
which(imputeStepsPerDayTotal$weekDays in c('Sun','Sat'))
which(imputeStepsPerDayTotal$weekDays <- c('Sun','Sat'))
which(imputeStepsPerDayTotal$weekDays == c('Sun','Sat'))
imputeStepsPerDayTotal$isWeekend <- which(imputeStepsPerDayTotal$weekDays == c('Sun','Sat'))
View(imputeStepsPerDayTotal)
imputeStepsPerDayTotal$isWeekend <- imputeStepsPerDayTotal[which(weekDays %in% c('Sat','Sun')), ]
imputeStepsPerDayTotal$isWeekend <- imputeStepsPerDayTotal[which(imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun')), ]
imputeStepsPerDayTotal$isWeekend <- imputeStepsPerDayTotal[which(, imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun')) ]
imputeStepsPerDayTotal[which(, imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun')) ]
imputeStepsPerDayTotal[which(imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun')),  ]
imputeStepsPerDayTotal$isWeekend <- imputeStepsPerDayTotal[which(imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun')),  ]
imputeStepsPerDayTotal$isWeekend <- which(imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun'))
imputeStepsPerDayTotal$isWeekend <- ifelse(imputeStepsPerDayTotal$weekDays %in% c('Sat','Sun'), true, false)
View(stepsPerDayTotal)
View(stepsPerDayTotal)
View(imputeStepsPerDayTotal)
View(imputeStepsPerDayTotal)
imputeStepsPerDayTotal$isWeekend <- with(imputeStepsPerDayTotal, ifelse(weekDays=='Sat', T, F)
)
imputeStepsPerDayTotal$isWeekend <- with(imputeStepsPerDayTotal, ifelse(weekDays=='Sun', T, F))
View(imputeStepsPerDayTotal)
imputeStepsPerDayTotal$isWeekend <- with(imputeStepsPerDayTotal, ifelse(weekDays %in% c('Sat', 'Sun'), T, F))
View(imputeStepsPerDayTotal)
View(stepsPerDayAvg)
stepsPerDayAvg$weekDays <- weekdays(stepsPerDayAvg$date, abbreviate=TRUE)
View(stepsPerDayAvg)
stepsPerDayAvg$isWeekend <- with(stepsPerDayAvg, ifelse(weekDays %in% c('Sat', 'Sun'), T, F))
ggplot(stepsPerDayAvg, aes(x=AvgStepsPerDay)) + geom_line() + facet(isweekend)
View(stepsPerDayAvg)
ggplot(stepsPerDayAvg, aex(x=AvgStepsPerDay)) + geom_line()
ggplot(stepsPerDayAvg, aes(x=AvgStepsPerDay)) + geom_line()
View(stepsPerDayAvg)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + facet(isweekend)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line(0
)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line()
View(stepsPerDayAvg)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + facet(isWeekend)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + facet(isWeekend ~ .)
ggplot(stepsPerDayAvg, aes(x=date, y=AvgStepsPerDay)) + geom_line() + facet_grid(isWeekend ~ .)
source('~/.active-rstudio-document', echo=TRUE)
